**** 문제점 ****

0. 항적데이터 등을 이용해서 공항 -> TMA 로 데이터 바꾸기
1. arrival은 demand를 줄이면 0으로 가는데 departure는 그렇지 않음
2. (ngbr) arrival + departure로 total을 구할 때, arr과 dep의 비율을 유지하며 단순히 더했는데, totald의sd를 계산할때 공분산을 고려해야할 듯
    -> 연관있는 feature만 골라서 새로운 drp-arr cov를 찾아 적용
3. eda, data preprocessing (scklearn.preprocessing / PCA / dimensionality reduction )
    -> 새로운 피쳐 많이 만들고 주성분분석으로 거르는 것 다시 해보기
4. XGBoost도 해보기
5. 바람 쌘 날이 잘 반영되지 않음  ->  어떤 새로운 변수를 만들어야 하나??
6. Max capacity에 영향을 주는 것에 어떤 것이 더 있는지 생각해보기(항공기 기종, 조종사 자격증명 등?)
7. NOTAM을 어떻게 반영하는게 좋을까






**** 개선 방향 및 아이디어 ****

* TMA Capacity 정의
    TMA와 Aiport의 Capacity에 차이라고 한다면 holding으로 인한 것 뿐인 것 같음
    -> 이 부분만 airport capacity에 포함을 시키면 되지않을까?
   
* data에 outlier에 대해서도 해야하니 quantile regression 이 적합??
    -> probability 처럼 나타낼 수도 있음

* Collaborative Decision Making(CDM) ?
    -> GDP를 하는데 항공사별로 공평할 필요가 있음/ 항공사가 다 모여서, 어떤 비행을 취소하고 어떤걸 먼저 띄울지 결정하면 좋을 듯

* mix of departure & arrival / 공항에서 arrival 과 departure capacity의 tradeoff??

* 이 ML이 prediction이라고 주는 값은,  Demand가 ~고, 날씨가 ~일 때 몇대가 들어올 것 같다는 값을 줌
    -> 이 항공기 숫자를 예측하게 하고(확률적으로) reservior 개념을 적용해서 scheduling problem으로 발전(holding은 어떻게 넣을까?)
    -> reservoir를 하려면 AAR, ADR을 STAR, SID에 들어오는 수로 해야겠는데??? (특히 Arrival)
    그래야지 TMA용량 정의를 holding하는 항공기 수를 포함하여 적용가능
    departure는 거의 공항과 같게 될 것 같음(departure는 홀딩을 거의 공항에서 하므로) , 
    아니면 departure로 hand off되는 고도에 도착하는 걸로
   +
   예를들어, reservoir에서 15분까지 airborne holding까지 허용한다고 하자 
   지금 방법으로하면 Demand만 한대씩 늘려가면서, 몇 대가 들어올 지 예측해서 값을 주는 거지 
   (즉, A대가 그떄 도착하도록 이렇게저렇게 GDP를 조정해서 보낸다 하면, 그 중 몇대가 B대가 그시간대에 올지 예측해서 값으로 줌) 
   -> 이렇게 한대씩 늘렸을 때 예측값으로 준 rate과 uncertainty*를 가지고 최대 15분 holding이라는 기준을 맞추도록 stochastic scheduling을 해서 최종적으로 적절하게 보내도 되는 A값을 찾음 (여러 곳에서 오는 신호를 순서대로 처리하라고 보내는 것이라고 할 수도 있음)  ( * 몇 대가 올지 예측한 거를 확률로? / 어디서 올지, 언제 올지? / arrival과 departure 비율??)
   -> A값을 그 상황에서의 Capacity 로 정의 
   +
   확률적으로 AAR예측
    -> batch(예, 10대)로 도착항공기들을 자르고 그 안에 서 순서 변경   or, CPS 도입해서
    -> GDP를 실행할지 말지 결정, 어떻게 스케줄링 할 건지 결정(방법은 강화학습으로 일련의 결정과정을 학습 및 결정 (일부로 AAR을 적게 예측(robust하게) 
    -> reservoir개념(일정시간의 대기시간으로 도착공항에서 airborne queue를 만드는 것)으로 스케줄링, 시뮬레이션해서(?), 
        실제 AAR이 예측 AAR보다 크게 나와 airborne holding 줄이도록  
    -> reservoir에 있는 항공기들의 수까지 TMA capacity로 정의함
   추가로, queue로 몇분까지의 airborne delay가 적절한지 계산
   AAR이 예측보다 적게 나오면 delay가 커질 수 있는 단점도 있음
   stochastic optimization은 최악의 경우는 나오지 않으므로 delay가 커지지는 않을 듯??

* 
    우선 수용량(Capacity)의 정의를 AAR, ADR로 하고 접근관제공역 수용량과 공항 수용량의 차이를 생각해보았을 때, 개인적으로는 접근관제공역의 수용량은 해당 구역 안에서 airborne holding하는 항공기들이 추가로 있다는 차이만 있다고 생각하여 이 수만 추가적으로 적용한다면 접근관제공역의 수용량을 정의할 수 있다고 생각합니다. 
    이것을 반영하기 위해서는 접근관제구역의 시작이라고 할 수 있는 STAR와 SID의 initial fix에 항공기들이 도착한 시간으로 시간당 들어온 항공기들의 수를 센다면, 그 값을 접근관제구역의 수용량이라고 할 수 있다고 생각합니다. 
    또한, Managed Arrival Reservoir(MAR)이라는 것을 알게되었습니다. 
    현재 미국에서 GDP를 실행할 때는,  Air Traffic Control System Command Center(ATCSCC) 라는 곳에서 해당 일의 Airport Acceptance Rate을 추정하고, 수요가 이것을 초과한다면 이 추정된 AAR에 맞게  FCFS의 순서로 이륙하는 항공기들의 출발시간을 조정하여 예상되는 AAR을 넘지 않게 새로운 이륙시간으로 조절하고 있습니다. 
    여기에서 Managed Arrival Reservoir라는 개념은 ATFM을 실행할 때, 일정 양(시간)의 Airborne delay까지를 포함하여 새로운 출발시간을 발부하는 것이라고 합니다. 
    예를 들어, 기존의 GDP의 실행 방법대로 하였을 때 A라는 항공기의 출발시간이 30분 늦은시간으로 변경되었다고 하겠습니다. 여기서 Managed Arrival Reservoir을 도입하고 허용가능한 Airborne holding시간을 15분이라한다면,  A라는 항공기를 30분 늦게 이륙시키는 것이 아닌 15분 늦게만 이륙시키는 것입니다. 
    이렇게 하였을 때, 예상한 AAR이 실제 AAR과 동일하다면 예상대로 A항공기는 15분 airborne holding을 하고 착륙할 것 입니다.
    만약 예상한 AAR보다 실제 AAR이 크다면, A항공기는 15분의 airborne delay보다 빠르게 착륙할 수 있다는 장점이 있습니다. 
    하지만 반대로 만약 예상한 AAR보다 실제 AAR이 작다면, A항공기는 15분 이상의 airborne delay를 하여 더 늦게 착륙하게 되고, 따라오는 항공기들도 점점 밀리게 되서 매우 큰 airborne delay를 초래하게 될지도 모른다는 위험이 있습니다. 
    여기에서 아이디어를 얻게 되었습니다.
    동일하게 reservoir의 개념을 도입하고 airborne holding을 15분까지 허용한다고 하겠습니다.  
    현재 만든 모델에서 prediction 값의 의미를 본다면,  " ~라는 상황(시간, 기상 등등)에서 ~의 Demand(해당시간에 그 공역에 운항하겠다하는 수요) 가 있을 때, 몇 대가 실제로 해당 공역에서 운항할 것 같다는 값 "  을 주는 것이라고 해석하였습니다. (현재까지의 경우, 공역 대신 공항에서의 데이터로 모델을 만들었습니다만...)
    그리고 지금 모델을 활용하였을 때, Demand를 한 대씩 늘려가면  그 때는 몇대가 실제로 운항할 지 예측한 값을 주는 것을 볼 수 있었습니다. (즉, 도착의 경우,  X대가 그 시간대에 도착하도록 이렇게저렇게 GDP를 조정해서 보낸다 하면, 그 중 실제로는 Y대가 그 시간대에 와서 운항할 것이다라고 예측한 값으로 주는 것이라고도 생각할 수 있을 것 같습니다)
    이렇게 한대씩 늘려가면서, 모델이 준 예측 값(Y대가 올 것이다) 과 항공기 운항이 가지고 있는 필연적인 불확실성(*)을 이용하여, 
    최대 15분 airborne holding이라는 기준을 맞추면서, 지상 및 공중에서의 holding 시간의 합이 가장 작게 항공기들이 들어올 수있도록 sequencing 한다면, 최종적으로 가능하게 보내도 되는 수(X대) 의 최대값을 찾을 수 있다고 생각합니다. 
    ( * 불확실성의 예로는 , 항공기가 정말 그때 올지도 모르는 것,  기상예보가 그대로 될지 모르는 것 등등 입니다.  - >  이를 표현하기 위해, 몇대가 올지 예측한 것을 하나의 값이 아닌 확률적으로 몇 대가 올 것이다와 같이 표현할 수 있지 않을까 생각합니다. 
        또, schdueling을 하기 위해서 항공기 들이 어느 방향에서 오고(어떤 STAR를 탈지), 오는 항공기들의 category는 어때서 separation을 얼마나 주어야할 지 등을 확률분포로 표현할 수 있을 것 같다고 생각하였습니다. ) 
    그리고 이 수(X)를 그 상황에서의 Capacity로 정의할 수 있지 않을까 라는 아이디어를 생각해보았습니다. 
    이러한 불확실성을 통해 사건이 확률을 가지고 schduling함에 있어서 강화학습을 사용하거나 stochastic optimization을 활용한다면,  일련의 결정에 대한 학습인 강화학습과 stochastic optimization의 특성상 최고의 결과는 얻을 수 없을지는 몰라도 최악의 결과는 얻지 않을 것 이라고 생각하고 있습니다.. 즉, 예측한 AAR보다 실제 AAR이 작아 심한 airborne delay를 초래하는 결과는 잘 안 나올 것이라고 생각하였습니다.
    단순히 demand를 증가시켰을 떄 saturation이 되는 값을 최대수용량이라고 하는 것 보다, 이러한 방법으로 한다면 더 근거있고 delay를 줄인다는 것에서 더 robust한(?) 결과를 얻을 수 있을 것 같습니다. 
``
